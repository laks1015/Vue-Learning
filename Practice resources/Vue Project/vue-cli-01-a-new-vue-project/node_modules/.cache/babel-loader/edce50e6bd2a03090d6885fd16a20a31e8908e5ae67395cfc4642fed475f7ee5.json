{"ast":null,"code":"import \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.find.js\";\nimport FriendContact from './components/FriendContact.vue';\nimport NewFriend from './components/NewFriend.vue';\nexport default {\n  components: {\n    FriendContact,\n    NewFriend\n  },\n  data() {\n    return {\n      friends: [{\n        id: 'manuel',\n        name: 'Manuel Lorenz',\n        phone: '01234 5678 991',\n        email: 'manuel@localhost.com',\n        isFavorite: true\n      }, {\n        id: 'julie',\n        name: 'Julie Jones',\n        phone: '01234 5678 992',\n        email: 'julie@localhost.com',\n        isFavorite: false\n      }]\n    };\n  },\n  methods: {\n    // toggleFavoriteStatus(friendId) {\n    //   const friend = this.friends.find(friend => friend.id === friendId);\n    //   friend.isFavorite = !friend.isFavorite;\n\n    // }\n    // ,\n    toggleFavoriteStatus(friendId) {\n      console.log('toggleFavoriteStatus is called! after listening to the event');\n      const identifiedFriend = this.friends.find(friend => friend.id === friendId);\n      identifiedFriend.isFavorite = !identifiedFriend.isFavorite;\n    },\n    addFriend(friendData) {\n      // friendData is the object woith the 3 properties\n      const newFriend = {\n        id: new Date().toISOString(),\n        name: friendData.name,\n        phone: friendData.phone,\n        email: friendData.email,\n        isFavorite: false\n      };\n      this.f;\n    }\n  }\n};","map":{"version":3,"names":["FriendContact","NewFriend","components","data","friends","id","name","phone","email","isFavorite","methods","toggleFavoriteStatus","friendId","console","log","identifiedFriend","find","friend","addFriend","friendData","newFriend","Date","toISOString","f"],"sources":["/Users/lakshita/Desktop/Vue/Github/Vue-Learning/Practice resources/Vue Project/vue-cli-01-a-new-vue-project/src/App.vue"],"sourcesContent":["<!-- This is the main App filewhich holds the app component -->\n<!-- can reuse fetures/components in other files -->\n<!--  Vue app vs vue components\n every component  is like a mini appp, and you can combine multiple compeontns into an app to build complex interfraces\n \n -->\n\n<template>\n  <section>\n    <header>\n      <h1>My friends:</h1>\n    </header>\n    <new-friend @add-friend=\"addFriend\"></new-friend>\n    <ul>\n\n      <!-- we use props to pass info from paretn and child\n       now we want to pass info from child to paren using event emitting-->\n      <!-- have to use v:bind to use dynamic binding if it accepts sommethign els other than a string and ou can even put a javascript conditional expression in there too -->\n      <friend-contact \n      v-for=\"friend in friends\" \n      v-bind:key=\"friend.id\" \n      :name=\"friend.name\" \n      :phone-number=\"friend.phone\"\n      :email-address=\"friend.email\" \n      v-bind:is-favorite=\"friend.isFavorite\"\n      :id=\"friend.id\"\n      @toggle-favorite=\"toggleFavoriteStatus\"\n        \n      ></friend-contact>\n        <!-- @event to listrn to = what function should be called  from the methods section-->\n\n\n\n    </ul>\n  </section>\n\n</template>\n\n\n<script>\nimport FriendContact from './components/FriendContact.vue';\nimport NewFriend from './components/NewFriend.vue';\n\nexport default {\n  components: { FriendContact, NewFriend },\n  data() {\n    return {\n      friends: [\n        {\n          id: 'manuel',\n          name: 'Manuel Lorenz',\n          phone: '01234 5678 991',\n          email: 'manuel@localhost.com',\n          isFavorite: true\n        },\n        {\n          id: 'julie',\n          name: 'Julie Jones',\n          phone: '01234 5678 992',\n          email: 'julie@localhost.com',\n          isFavorite: false\n\n        }\n\n\n      ]\n    }\n  },\n\n  methods: {\n    // toggleFavoriteStatus(friendId) {\n    //   const friend = this.friends.find(friend => friend.id === friendId);\n    //   friend.isFavorite = !friend.isFavorite;\n      \n    // }\n    // ,\n    toggleFavoriteStatus(friendId) {\n      console.log('toggleFavoriteStatus is called! after listening to the event');\n      const identifiedFriend = this.friends.find(friend => friend.id === friendId);\n      identifiedFriend.isFavorite = !identifiedFriend.isFavorite;\n    },\n\n  addFriend(friendData){\n    // friendData is the object woith the 3 properties\n    const newFriend = {\n      id: new Date().toISOString(),\n      name: friendData.name,\n      phone: friendData.phone,\n      email: friendData.email,\n      isFavorite: false\n    };\n    this.f\n  },\n  }\n};\n\n\n</script>\n\n<style>\n@import url('https://fonts.googleapis.com/css2?family=Jost&display=swap');\n\n* {\n  box-sizing: border-box;\n}\n\nhtml {\n  font-family: 'Jost', sans-serif;\n}\n\nbody {\n  margin: 0;\n}\n\nheader {\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.26);\n  margin: 3rem auto;\n  border-radius: 10px;\n  padding: 1rem;\n  background-color: #58004d;\n  color: white;\n  text-align: center;\n  width: 90%;\n  max-width: 40rem;\n}\n\n#app ul {\n  margin: 0;\n  padding: 0;\n  list-style: none;\n}\n\n#app li , #app form{\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.26);\n  margin: 1rem auto;\n  border-radius: 10px;\n  padding: 1rem;\n  text-align: center;\n  width: 90%;\n  max-width: 40rem;\n}\n\n#app h2 {\n  font-size: 2rem;\n  border-bottom: 4px solid #ccc;\n  color: #58004d;\n  margin: 0 0 1rem 0;\n}\n\n#app button {\n  font: inherit;\n  cursor: pointer;\n  border: 1px solid #ff0077;\n  background-color: #ff0077;\n  color: white;\n  padding: 0.05rem 1rem;\n  box-shadow: 1px 1px 2px rgba(0, 0, 0, 0.26);\n  margin: 2px;\n}\n\n#app button:hover,\n#app button:active {\n  background-color: #ec3169;\n  border-color: #ec3169;\n  box-shadow: 1px 1px 4px rgba(0, 0, 0, 0.26);\n}\n\n/* new-friend css */\n#app input {\n  font: inherit;\n  padding: 0.15rem;\n}\n#app label {\n  font-weight: bold;\n  margin-right: 1rem;\n  width: 7rem;\n  display: inline-block;\n}\n#app form div {\n  margin: 1rem 0;\n}\n</style>"],"mappings":";;AAwCA,OAAOA,aAAY,MAAO,gCAAgC;AAC1D,OAAOC,SAAQ,MAAO,4BAA4B;AAElD,eAAe;EACbC,UAAU,EAAE;IAAEF,aAAa;IAAEC;EAAU,CAAC;EACxCE,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,OAAO,EAAE,CACP;QACEC,EAAE,EAAE,QAAQ;QACZC,IAAI,EAAE,eAAe;QACrBC,KAAK,EAAE,gBAAgB;QACvBC,KAAK,EAAE,sBAAsB;QAC7BC,UAAU,EAAE;MACd,CAAC,EACD;QACEJ,EAAE,EAAE,OAAO;QACXC,IAAI,EAAE,aAAa;QACnBC,KAAK,EAAE,gBAAgB;QACvBC,KAAK,EAAE,qBAAqB;QAC5BC,UAAU,EAAE;MAEd;IAIJ;EACF,CAAC;EAEDC,OAAO,EAAE;IACP;IACA;IACA;;IAEA;IACA;IACAC,oBAAoBA,CAACC,QAAQ,EAAE;MAC7BC,OAAO,CAACC,GAAG,CAAC,8DAA8D,CAAC;MAC3E,MAAMC,gBAAe,GAAI,IAAI,CAACX,OAAO,CAACY,IAAI,CAACC,MAAK,IAAKA,MAAM,CAACZ,EAAC,KAAMO,QAAQ,CAAC;MAC5EG,gBAAgB,CAACN,UAAS,GAAI,CAACM,gBAAgB,CAACN,UAAU;IAC5D,CAAC;IAEHS,SAASA,CAACC,UAAU,EAAC;MACnB;MACA,MAAMC,SAAQ,GAAI;QAChBf,EAAE,EAAE,IAAIgB,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC;QAC5BhB,IAAI,EAAEa,UAAU,CAACb,IAAI;QACrBC,KAAK,EAAEY,UAAU,CAACZ,KAAK;QACvBC,KAAK,EAAEW,UAAU,CAACX,KAAK;QACvBC,UAAU,EAAE;MACd,CAAC;MACD,IAAI,CAACc,CAAA;IACP;EACA;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}